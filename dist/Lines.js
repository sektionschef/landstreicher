class Line{constructor(t,i,s,h,e){this.orientation=t,this.x=i,this.y=s,this.limit_x=h,this.limit_y=e,this.history=[],this.line_color=distortColor(color(STROKE_COLOR)),this.run_complete=!1}show(){"x"==this.orientation?this.x<=this.limit_x?(this.x+=STROKE_SPEED,this.y=this.y+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),frameCount%STROKE_RESOLUTION==0&&this.history.push(createVector(this.x,this.y))):this.run_complete=!0:"y"==this.orientation?this.y<=this.limit_y?(this.y+=STROKE_SPEED,this.x=this.x+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),frameCount%STROKE_RESOLUTION==0&&this.history.push(createVector(this.x,this.y))):this.run_complete=!0:"xy"==this.orientation?this.x<=this.limit_x&&this.y<=this.limit_y?(this.x+=STROKE_SPEED,this.y+=STROKE_SPEED,this.x=this.x+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),this.y=this.y+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),frameCount%STROKE_RESOLUTION==0&&this.history.push(createVector(this.x,this.y))):this.run_complete=!0:"yx"==this.orientation&&(this.x<=this.limit_x&&this.y>=this.limit_y?(this.x+=STROKE_SPEED,this.y-=STROKE_SPEED,this.x=this.x+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),this.y=this.y+getRandomFromInterval(-1*STROKE_DISTORT,STROKE_DISTORT),frameCount%STROKE_RESOLUTION==0&&this.history.push(createVector(this.x,this.y))):this.run_complete=!0),push(),strokeWeight(STROKE_SIZE),stroke(this.line_color),noFill(),beginShape();for(let t=0;t<this.history.length;t++)vertex(this.history[t].x*SCALING_FACTOR,this.history[t].y*SCALING_FACTOR);endShape(),pop(),push(),noStroke(),fill(this.line_color),circle(this.x*SCALING_FACTOR,this.y*SCALING_FACTOR,STROKE_SIZE),pop()}}class Lines{constructor(t,i,s,h,e,_,n){this.x_start=t,this.y_start=i,this.x_stop=s,this.y_stop=h,this.padding_x=e,this.padding_y=_,this.distance_between_lines=n,this.bodies=[],this.all_lines_complete=!1;let o=getRandomFromList(["x","y","xy","yx","blank"]);if(logging.debug(o+" axis randomly chosen."),"x"==o){this.count_lines=(this.y_stop-this.y_start-2*this.padding_y)/this.distance_between_lines;for(let t=0;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x,this.y_start+this.padding_y+this.distance_between_lines*t,this.x_stop-this.padding_x,this.y_stop-this.padding_y))}else if("y"==o){this.count_lines=(this.x_stop-this.x_start-2*this.padding_x)/this.distance_between_lines;for(let t=0;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x+this.distance_between_lines*t,this.y_start+this.padding_y,this.x_stop-this.padding_x,this.y_stop-this.padding_x))}else if("xy"==o){this.count_lines=(this.x_stop-this.x_start-2*this.padding_x)/this.distance_between_lines;for(let t=0;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x+this.distance_between_lines*t,this.y_start+this.padding_y,this.x_stop-this.padding_x,this.y_stop-this.padding_y));this.count_lines=(this.y_stop-this.y_start-2*this.padding_y)/this.distance_between_lines;for(let t=1;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x,this.y_start+this.padding_y+this.distance_between_lines*t,this.x_stop-this.padding_x,this.y_stop-this.padding_y))}else if("yx"==o){this.count_lines=(this.x_stop-this.x_start-2*this.padding_x)/this.distance_between_lines;for(let t=0;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x+this.distance_between_lines*t,this.y_stop-this.padding_y,this.x_stop-this.padding_x,this.y_start+this.padding_y));this.count_lines=(this.y_stop-this.y_start-2*this.padding_y)/this.distance_between_lines;for(let t=1;t<this.count_lines;t++)this.bodies.push(new Line(o,this.x_start+this.padding_x,this.y_stop-this.padding_y-this.distance_between_lines*t,this.x_stop-this.padding_x,this.y_start+this.padding_y))}}show(){for(var t of this.bodies)t.show()}check_all_complete(){for(var t of(this.all_lines_complete=!0,this.bodies))0==t.run_complete&&(this.all_lines_complete=!1)}}